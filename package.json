{
  "name": "ai-multi-model-management-system",
  "version": "2.0.0",
  "description": "Enterprise AI Multi-Model Management System - Phase 2 Extended with 23+ AI models integration",
  "main": "backend/server.js",
  "keywords": [
    "ai",
    "multi-model",
    "enterprise",
    "genspark",
    "machine-learning",
    "artificial-intelligence",
    "api",
    "websocket",
    "analytics",
    "security"
  ],
  "author": "GenSpark AI Team <ai-team@genspark.ai>",
  "license": "MIT",
  "homepage": "https://ai-multimodel.genspark.ai",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/genspark/ai-multi-model-system.git"
  },
  "bugs": {
    "url": "https://github.com/genspark/ai-multi-model-system/issues"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "start": "node backend/server.js",
    "start:prod": "NODE_ENV=production pm2 start ecosystem.config.js",
    "start:dev": "NODE_ENV=development nodemon backend/server.js",
    "start:test": "NODE_ENV=test node backend/server.js",
    "start:cluster": "NODE_ENV=production pm2 start ecosystem.config.js --env production",
    "build": "npm run build:frontend && npm run build:sdk",
    "build:frontend": "cd frontend && npm run build",
    "build:sdk": "cd sdk/javascript && npm run build",
    "test": "mocha tests/**/*.test.js --timeout 15000 --exit",
    "test:api": "mocha tests/api.test.js --timeout 15000 --exit",
    "test:db": "mocha tests/database.test.js --timeout 15000 --exit",
    "test:coverage": "nyc mocha tests/**/*.test.js --timeout 15000 --exit",
    "test:jest": "jest --coverage --watchAll=false",
    "test:unit": "jest --testPathPattern=tests/unit --coverage",
    "test:integration": "jest --testPathPattern=tests/integration --runInBand",
    "test:e2e": "playwright test",
    "test:websockets": "jest --testPathPattern=tests/websocket --runInBand",
    "test:auth": "jest --testPathPattern=tests/auth --runInBand",
    "test:smoke": "jest --testPathPattern=tests/smoke --runInBand",
    "test:performance": "jest --testPathPattern=tests/performance --runInBand",
    "test:security": "jest --testPathPattern=tests/security --runInBand",
    "test:watch": "jest --watch",
    "migrate": "node scripts/migrate.js",
    "migrate:test": "NODE_ENV=test node scripts/migrate.js",
    "migrate:staging": "NODE_ENV=staging node scripts/migrate.js", 
    "seed": "node scripts/seed.js",
    "seed:test": "NODE_ENV=test node scripts/seed.js",
    "lint": "eslint . --ext .js,.ts,.tsx --max-warnings 0",
    "lint:fix": "eslint . --ext .js,.ts,.tsx --fix",
    "format": "prettier --write \"**/*.{js,ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,tsx,json,md}\"",
    "deploy": "bash scripts/deploy.sh",
    "deploy:staging": "ENVIRONMENT=staging bash scripts/deploy.sh",
    "deploy:production": "ENVIRONMENT=production bash scripts/deploy.sh",
    "docker:build": "docker build -t spirit-tours-api:latest .",
    "docker:run": "docker run -p 3000:3000 -p 3001:3001 -p 3002:3002 spirit-tours-api:latest",
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:ps": "docker compose ps",
    "docker:restart": "docker compose restart",
    "docker:validate": "bash scripts/validate-docker.sh",
    "k8s:deploy": "kubectl apply -f infrastructure/k8s/",
    "k8s:staging": "kubectl apply -f infrastructure/k8s/staging/",
    "k8s:production": "kubectl apply -f infrastructure/k8s/production/",
    "health:check": "curl -f http://localhost:3000/health",
    "logs": "pm2 logs --lines 100",
    "monitor": "pm2 monit",
    "stop": "pm2 stop ecosystem.config.js",
    "restart": "pm2 restart ecosystem.config.js",
    "reload": "pm2 reload ecosystem.config.js",
    "reset": "pm2 delete all && npm run start:prod",
    "setup": "npm install && cd frontend && npm install && cd ../sdk/javascript && npm install",
    "clean": "rm -rf node_modules frontend/node_modules sdk/javascript/node_modules",
    "clean:build": "rm -rf frontend/dist frontend/build sdk/javascript/dist",
    "clean:logs": "rm -rf logs/* deployment-logs/*",
    "clean:cache": "npm cache clean --force && rm -rf .eslintcache",
    "validate": "npm run lint && npm run format:check && npm run test:unit",
    "precommit": "npm run validate",
    "prepare": "husky install || true",
    "postinstall": "npm run setup:hooks || true",
    "setup:hooks": "npx husky add .husky/pre-commit \"npm run precommit\"",
    "ci:test": "npm run test -- --ci --coverage --watchAll=false",
    "ci:e2e": "playwright test --reporter=github",
    "ci:security": "npm audit --audit-level moderate",
    "ci:build": "npm run build && npm run docker:build",
    "release": "semantic-release",
    "release:dry": "semantic-release --dry-run"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "express": "^4.18.2",
    "pg": "^8.11.3",
    "ioredis": "^5.3.2",
    "mongodb": "^6.3.0",
    "redis": "^4.6.0",
    "winston": "^3.11.0",
    "ws": "^8.14.0",
    "jsonwebtoken": "^9.0.2",
    "nodemailer": "^6.9.0",
    "bcrypt": "^5.1.1",
    "dotenv": "^16.3.1",
    "helmet": "^7.1.0",
    "cors": "^2.8.5",
    "morgan": "^1.10.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/jest": "^29.5.0",
    "chai": "^4.3.10",
    "mocha": "^10.2.0",
    "nyc": "^15.1.0",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^1.7.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "semantic-release": "^22.0.0",
    "supertest": "^6.3.3"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "backend/**/*.js",
      "!backend/**/*.test.js",
      "!backend/**/*.spec.js",
      "!**/node_modules/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "json"
    ],
    "testMatch": [
      "**/tests/**/*.test.js",
      "**/tests/**/*.spec.js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ],
    "testTimeout": 30000
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:node/recommended",
      "plugin:security/recommended",
      "prettier"
    ],
    "env": {
      "node": true,
      "es2022": true,
      "jest": true
    },
    "parserOptions": {
      "ecmaVersion": 2022,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "warn",
      "no-unused-vars": "error",
      "no-var": "error",
      "prefer-const": "error",
      "security/detect-object-injection": "warn"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run precommit",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}