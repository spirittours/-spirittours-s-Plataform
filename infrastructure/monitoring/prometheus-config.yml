# üìä Prometheus Configuration - AI Multi-Model Management System
# Enterprise monitoring and metrics collection

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ai-multimodel-production'
    environment: 'production'

rule_files:
  - "/etc/prometheus/rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # üéØ AI Multi-Model API Monitoring
  - job_name: 'ai-multimodel-api'
    static_configs:
      - targets:
        - ai-multimodel-api:3001
    scrape_interval: 10s
    metrics_path: '/metrics'
    scheme: http
    params:
      format: ['prometheus']

  # üåê Frontend Application Monitoring
  - job_name: 'ai-multimodel-frontend'
    static_configs:
      - targets:
        - ai-multimodel-frontend:80
    scrape_interval: 30s
    metrics_path: '/metrics'
    
  # üìä Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets:
        - node-exporter:9100
    scrape_interval: 15s

  # ‚ò∏Ô∏è Kubernetes Metrics
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # üóÑÔ∏è Redis Monitoring
  - job_name: 'redis'
    static_configs:
      - targets:
        - redis-exporter:9121
    scrape_interval: 15s

  # üóÑÔ∏è PostgreSQL Monitoring  
  - job_name: 'postgres'
    static_configs:
      - targets:
        - postgres-exporter:9187
    scrape_interval: 15s

  # üîÑ Load Balancer Monitoring
  - job_name: 'nginx-ingress'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - ingress-nginx
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        action: keep
        regex: ingress-nginx
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: keep
        regex: "10254"

  # üß† AI Model Performance Monitoring
  - job_name: 'ai-models-performance'
    static_configs:
      - targets:
        - ai-multimodel-api:3001
    scrape_interval: 5s
    metrics_path: '/api/v1/metrics/models'
    params:
      detailed: ['true']

  # üìä Custom Business Metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets:
        - ai-multimodel-api:3001
    scrape_interval: 30s
    metrics_path: '/api/v1/metrics/business'

  # üîê Security Metrics
  - job_name: 'security-metrics'
    static_configs:
      - targets:
        - ai-multimodel-api:3001
    scrape_interval: 60s
    metrics_path: '/api/v1/metrics/security'

# üìä Recording Rules for Performance Optimization
recording_rules:
  - name: ai_multimodel_aggregations
    rules:
      # API Response Time Aggregations
      - record: ai_multimodel:api_response_time_p95_5m
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))
      
      - record: ai_multimodel:api_response_time_p99_5m
        expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))
      
      # AI Model Performance Aggregations
      - record: ai_multimodel:model_response_time_avg_5m
        expr: avg(rate(ai_model_request_duration_seconds_sum[5m]) / rate(ai_model_request_duration_seconds_count[5m])) by (model_name)
      
      # Error Rate Aggregations
      - record: ai_multimodel:error_rate_5m
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])
      
      # Throughput Aggregations
      - record: ai_multimodel:requests_per_second_5m
        expr: rate(http_requests_total[5m])
      
      # Resource Utilization
      - record: ai_multimodel:cpu_utilization_avg
        expr: avg(rate(container_cpu_usage_seconds_total[5m])) by (container_name)
      
      - record: ai_multimodel:memory_utilization_avg
        expr: avg(container_memory_working_set_bytes / container_spec_memory_limit_bytes) by (container_name)

# üéØ Federation Configuration (for multi-cluster monitoring)
federation:
  - job_name: 'federate-staging'
    scrape_interval: 15s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"ai-multimodel.*"}'
        - '{job=~"kubernetes.*"}'
    static_configs:
      - targets:
        - prometheus-staging.ai-multimodel.genspark.ai:9090

# üîß Remote Write Configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.ai-multimodel.genspark.ai/api/v1/write"
    basic_auth:
      username: $REMOTE_WRITE_USERNAME
      password: $REMOTE_WRITE_PASSWORD
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# üìä Storage Configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 100GB
    min-block-duration: 2h
    max-block-duration: 25h