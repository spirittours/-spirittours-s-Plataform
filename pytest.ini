[tool:pytest]
# Configuración principal para pytest - Spirit Tours Testing Suite

# Directorios de test
testpaths = 
    tests/unit
    tests/integration
    tests/e2e
    tests/performance
    tests/load
    tests/security

# Patrones de archivos de test
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Marcadores personalizados
markers =
    unit: Unit tests - fast, isolated tests for individual components
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - complete workflow testing
    performance: Performance tests - measure response times and throughput
    load: Load tests - test system behavior under load
    security: Security tests - vulnerability and penetration testing
    slow: Slow running tests (longer than 10 seconds)
    smoke: Smoke tests - basic functionality verification
    regression: Regression tests - prevent previously fixed bugs
    analytics: Tests for analytics and ML components
    websocket: Tests for WebSocket functionality
    api: API endpoint tests
    database: Database-related tests
    auth: Authentication and authorization tests
    ml: Machine Learning model tests
    realtime: Real-time functionality tests

# Opciones por defecto
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --durations=10
    --maxfail=5
    -p no:warnings

# Configuración de cobertura
[coverage:run]
source = backend
omit = 
    backend/tests/*
    backend/migrations/*
    backend/scripts/*
    backend/__pycache__/*
    backend/*/__pycache__/*
    backend/core/config.py
    backend/main.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Configuración mínima de cobertura por archivo
[coverage:html]
directory = htmlcov

# Filtros de warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:websockets.*
    ignore::RuntimeWarning:asyncio.*

# Configuración asyncio
asyncio_mode = auto

# Variables de entorno para tests
env = 
    ENVIRONMENT = testing
    DATABASE_URL = sqlite:///./test.db
    SECRET_KEY = test-secret-key-super-secure
    REDIS_URL = redis://localhost:6379/1
    TESTING = true
    LOG_LEVEL = DEBUG