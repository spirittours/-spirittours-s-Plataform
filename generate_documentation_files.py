#!/usr/bin/env python3
"""
Spirit Tours - Documentation Generator
Genera archivos Word y PDF del reporte completo del sistema
"""

import os
from docx import Document
from docx.shared import Inches, Pt, RGBColor
from docx.enum.text import WD_ALIGN_PARAGRAPH
from reportlab.lib.pagesizes import letter
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak, Table, TableStyle
from reportlab.lib import colors
from reportlab.lib.enums import TA_CENTER, TA_LEFT
import datetime

# Leer el reporte markdown
with open('REPORTE_COMPLETO_SISTEMA.md', 'r', encoding='utf-8') as f:
    markdown_content = f.read()

# ============================================================================
# FUNCI√ìN PARA GENERAR WORD
# ============================================================================

def generate_word_document():
    """Genera documento Word del reporte completo"""
    
    print("üìÑ Generando documento Word...")
    
    doc = Document()
    
    # ===== PORTADA =====
    # T√≠tulo principal
    title = doc.add_heading('SPIRIT TOURS PLATFORM', 0)
    title.alignment = WD_ALIGN_PARAGRAPH.CENTER
    title_run = title.runs[0]
    title_run.font.color.rgb = RGBColor(0, 102, 204)  # Azul
    
    # Subt√≠tulo
    subtitle = doc.add_heading('REPORTE COMPLETO DEL SISTEMA', 1)
    subtitle.alignment = WD_ALIGN_PARAGRAPH.CENTER
    
    # Informaci√≥n de versi√≥n
    info = doc.add_paragraph()
    info.alignment = WD_ALIGN_PARAGRAPH.CENTER
    info.add_run(f'Fecha de Generaci√≥n: {datetime.datetime.now().strftime("%d de %B, %Y")}\n').bold = True
    info.add_run('Versi√≥n del Sistema: 2.0.0\n')
    info.add_run('Estado: ‚úÖ 100% Operacional - Production Ready\n')
    info.add_run('Arquitectura: Microservicios Full-Stack con IA Multi-Modelo')
    
    doc.add_page_break()
    
    # ===== TABLA DE CONTENIDO =====
    doc.add_heading('üìã TABLA DE CONTENIDO', 1)
    
    toc_items = [
        '1. VISI√ìN GENERAL DEL SISTEMA',
        '2. ARQUITECTURA COMPLETA',
        '3. M√ìDULOS DEL SISTEMA (66+ M√≥dulos)',
        '4. AGENTES DE INTELIGENCIA ARTIFICIAL (28 Agentes)',
        '5. FUNCIONALIDADES PRINCIPALES',
        '6. APIs Y ENDPOINTS (200+ Endpoints)',
        '7. MODELOS DE NEGOCIO',
        '8. INTEGRACIONES EXTERNAS (25+ Servicios)'
    ]
    
    for item in toc_items:
        p = doc.add_paragraph(item, style='List Number')
        p_format = p.paragraph_format
        p_format.left_indent = Inches(0.25)
    
    doc.add_page_break()
    
    # ===== RESUMEN EJECUTIVO =====
    doc.add_heading('üìä RESUMEN EJECUTIVO', 1)
    
    doc.add_paragraph(
        'Spirit Tours es una plataforma integral de turismo religioso y espiritual de nivel '
        'empresarial que combina tecnolog√≠a avanzada de IA, realidad aumentada, blockchain '
        'y sistemas empresariales B2B/B2C/B2B2C.'
    )
    
    # Tabla de estad√≠sticas
    doc.add_heading('Estad√≠sticas del Sistema', 2)
    
    stats_data = [
        ['M√©trica', 'Valor'],
        ['M√≥dulos Principales', '66+ m√≥dulos'],
        ['Agentes IA', '28 agentes especializados'],
        ['APIs/Endpoints', '200+ endpoints REST'],
        ['Modelos de Negocio', '3 (B2C, B2B, B2B2C)'],
        ['Tipos de Usuario', '8 roles diferentes'],
        ['Integraciones', '25+ servicios externos'],
        ['Bases de Datos', '3 (PostgreSQL, Redis, MongoDB)'],
        ['Idiomas Soportados', '15+ idiomas']
    ]
    
    table = doc.add_table(rows=len(stats_data), cols=2)
    table.style = 'Light Grid Accent 1'
    
    for i, row_data in enumerate(stats_data):
        row = table.rows[i]
        row.cells[0].text = row_data[0]
        row.cells[1].text = row_data[1]
        
        if i == 0:  # Header row
            for cell in row.cells:
                cell.paragraphs[0].runs[0].font.bold = True
    
    doc.add_page_break()
    
    # ===== ARQUITECTURA =====
    doc.add_heading('üèóÔ∏è ARQUITECTURA COMPLETA', 1)
    
    doc.add_heading('Stack Tecnol√≥gico', 2)
    
    stack_sections = [
        ('Frontend Layer', [
            'React 18.2 con TypeScript',
            'Tailwind CSS para estilos',
            'Three.js para AR/VR',
            'Socket.io Client para real-time'
        ]),
        ('API Gateway Layer', [
            'FastAPI + Express.js',
            '200+ REST Endpoints',
            'WebSocket Real-time',
            'JWT Authentication',
            'Rate Limiting'
        ]),
        ('Business Logic Layer', [
            'Microservicios Architecture',
            'Booking Service',
            'Payment Service',
            'CRM Service',
            'AI Orchestrator (28 agentes)',
            'Analytics Service'
        ]),
        ('Data Layer', [
            'PostgreSQL 14+ (Primary)',
            'Redis 6+ (Cache)',
            'MongoDB 5+ (Logs, Analytics)',
            'Vector DB (Pinecone) para IA'
        ]),
        ('Integration Layer', [
            'Payment Gateways (Stripe, PayPal, MercadoPago)',
            'GDS Systems (Amadeus, Sabre)',
            'OTAs (Booking.com, Expedia)',
            'AI Services (OpenAI, Claude, Gemini)',
            'Communication (Twilio, SendGrid, WhatsApp)'
        ])
    ]
    
    for section_title, items in stack_sections:
        doc.add_heading(section_title, 3)
        for item in items:
            doc.add_paragraph(item, style='List Bullet')
    
    doc.add_page_break()
    
    # ===== M√ìDULOS DEL SISTEMA =====
    doc.add_heading('üì¶ M√ìDULOS DEL SISTEMA (66+)', 1)
    
    doc.add_paragraph(
        'El sistema Spirit Tours est√° compuesto por m√°s de 66 m√≥dulos funcionales '
        'organizados en diferentes categor√≠as para cubrir todas las necesidades del negocio.'
    )
    
    modules_categories = [
        ('Core Business (12 m√≥dulos)', [
            'Booking System - Sistema completo de reservas con disponibilidad en tiempo real',
            'Payment Processing - M√∫ltiples pasarelas (Stripe, PayPal, MercadoPago)',
            'CRM System - Gesti√≥n 360¬∞ de clientes con pipeline visual',
            'Authentication & Authorization - JWT, 2FA, RBAC con 8 roles',
            'Email Marketing System - Campa√±as masivas y automatizaciones',
            'Communication Hub - PBX/3CX, WhatsApp, SMS, Web Chat',
            'Channel Manager - Integraci√≥n con OTAs principales',
            'Transport Management - Gesti√≥n de flota y rutas optimizadas',
            'Flight Integration - GDS (Amadeus, Sabre)',
            'PMS - Property Management System',
            'Agency Management - Onboarding y comisiones',
            'Package Bundling - Paquetes din√°micos'
        ]),
        ('AI & ML (20 m√≥dulos)', [
            'AI Orchestrator - Coordinaci√≥n de 28 agentes IA',
            'Recommendation Engine - ML personalizado',
            'AI Tour Designer - Generaci√≥n de itinerarios',
            'Intelligent Chatbot - NLP multi-idioma',
            'Dynamic Pricing Engine - Optimizaci√≥n de revenue',
            'Predictive Analytics - Forecasting avanzado',
            'Voice AI Agents - STT/TTS',
            'Content Generation AI - GPT-4, Claude, Gemini',
            'Sentiment Analysis - An√°lisis de reviews',
            'Fraud Detection AI - Prevenci√≥n de fraude',
            'Y 10 m√≥dulos m√°s de IA...'
        ]),
        ('Analytics & Reporting (5 m√≥dulos)', [
            'Analytics Engine - KPIs en tiempo real',
            'Real-Time Dashboard - Visualizaci√≥n din√°mica',
            'Automated Reporting - Reportes programados',
            'Business Intelligence - An√°lisis avanzado',
            'Conversion Tracking - Funnels y cohorts'
        ]),
        ('Security (6 m√≥dulos)', [
            'Security Audit System - Logging completo',
            'RBAC System - Permisos granulares',
            'Two-Factor Authentication - TOTP, SMS, Email',
            'Data Privacy AI - GDPR/CCPA compliance',
            'Vulnerability Scanner - Seguridad proactiva',
            'Intrusion Detection - Monitoreo 24/7'
        ]),
        ('Advanced Features (12 m√≥dulos)', [
            'AR/VR Experiences - Realidad aumentada y virtual',
            'Blockchain Integration - Smart contracts y NFTs',
            'Metaverse Integration - Experiencias virtuales',
            'Brain-Computer Interface - Tecnolog√≠a BCI',
            'Space Tourism - Viajes espaciales',
            'Quantum Computing - Optimizaci√≥n cu√°ntica',
            'Sustainability Module - Huella de carbono',
            'International Expansion - Multi-currency, multi-language',
            'IoT & Wearables - Smart devices',
            'Holographic Telepresence - Hologramas',
            'Y m√°s tecnolog√≠as emergentes...'
        ]),
        ('Infrastructure (11 m√≥dulos)', [
            'Intelligent Cache System - Caching predictivo',
            'Intelligent Load Balancer - Distribuci√≥n AI',
            'Failover System - Alta disponibilidad',
            'Backup & Disaster Recovery - Respaldo autom√°tico',
            'Monitoring System - Prometheus + Grafana',
            'WebSocket Manager - Real-time communication',
            'WebRTC Signaling - Video calls',
            'Database Optimizer - Optimizaci√≥n de queries',
            'CDN Integration - Contenido distribuido',
            'Service Mesh - Comunicaci√≥n inter-servicios',
            'Container Orchestration - Kubernetes'
        ])
    ]
    
    for category_title, modules in modules_categories:
        doc.add_heading(category_title, 2)
        for module in modules:
            doc.add_paragraph(module, style='List Bullet')
        doc.add_paragraph()  # Espacio
    
    doc.add_page_break()
    
    # ===== AGENTES IA =====
    doc.add_heading('ü§ñ AGENTES DE INTELIGENCIA ARTIFICIAL (28)', 1)
    
    doc.add_paragraph(
        'Spirit Tours cuenta con 28 agentes de IA especializados organizados en 3 tracks '
        'principales, cada uno optimizado para diferentes aspectos del negocio.'
    )
    
    # TRACK 1
    doc.add_heading('üéØ TRACK 1: Customer & Revenue Excellence (9 agentes)', 2)
    
    track1_agents = [
        ('Multi-Channel Communication Hub', 'Gesti√≥n unificada de WhatsApp, Facebook, Instagram, Twitter, Web Chat con routing autom√°tico'),
        ('ContentMaster AI', 'Generaci√≥n de contenido SEO con GPT-4, Claude y Gemini en 15+ idiomas'),
        ('CompetitiveIntel AI', 'Monitoreo de precios de competencia en tiempo real con alertas autom√°ticas'),
        ('CustomerProphet AI', 'Predicci√≥n de comportamiento y churn prevention con ML avanzado'),
        ('ExperienceCurator AI', 'Generaci√≥n de itinerarios personalizados con optimizaci√≥n de rutas'),
        ('RevenueMaximizer AI', 'Dynamic pricing y yield management para maximizar ingresos'),
        ('SocialSentiment AI', 'An√°lisis de sentimiento en redes sociales con detecci√≥n de crisis'),
        ('BookingOptimizer AI', 'Optimizaci√≥n de conversiones con A/B testing autom√°tico'),
        ('DemandForecaster AI', 'Pron√≥stico de demanda a 90 d√≠as con ARIMA y Prophet')
    ]
    
    for agent_name, description in track1_agents:
        p = doc.add_paragraph()
        p.add_run(f'{agent_name}: ').bold = True
        p.add_run(description)
    
    doc.add_paragraph()
    
    # TRACK 2
    doc.add_heading('üõ°Ô∏è TRACK 2: Security & Market Intelligence (10 agentes)', 2)
    
    track2_agents = [
        ('CyberSentinel AI', 'Detecci√≥n de intrusiones y DDoS prevention con threat intelligence'),
        ('FraudGuardian AI', 'Prevenci√≥n de fraude en pagos con ML y behavioral analysis'),
        ('DataPrivacy AI', 'Compliance GDPR/CCPA con gesti√≥n autom√°tica de consentimientos'),
        ('MarketIntel AI', 'An√°lisis de tendencias de mercado y emerging destinations'),
        ('RegulatoryWatch AI', 'Monitoreo de cambios regulatorios multi-jurisdicci√≥n'),
        ('QualityGuardian AI', 'Control de calidad de proveedores con scoring autom√°tico'),
        ('ContractAnalyzer AI', 'An√°lisis de contratos con NLP y risk detection'),
        ('SupplyChain AI', 'Optimizaci√≥n de cadena de suministro con predicci√≥n de disrupciones'),
        ('PartnershipScout AI', 'Identificaci√≥n de oportunidades de partnership con ROI analysis'),
        ('RiskManager AI', 'Gesti√≥n de riesgos con scenario analysis y mitigation strategies')
    ]
    
    for agent_name, description in track2_agents:
        p = doc.add_paragraph()
        p.add_run(f'{agent_name}: ').bold = True
        p.add_run(description)
    
    doc.add_paragraph()
    
    # TRACK 3
    doc.add_heading('üå± TRACK 3: Ethics & Sustainability (9 agentes)', 2)
    
    track3_agents = [
        ('EcoImpact AI', 'C√°lculo de huella de carbono y programas de compensaci√≥n'),
        ('CulturalGuardian AI', 'Protecci√≥n de patrimonio cultural y prevenci√≥n de overtourism'),
        ('AccessibilityChampion AI', 'Dise√±o inclusivo con compliance ADA/WCAG'),
        ('EthicsMonitor AI', 'Supervisi√≥n √©tica y fair trade verification'),
        ('WellnessAdvisor AI', 'Recomendaciones de wellness y health monitoring'),
        ('CommunityImpact AI', 'Medici√≥n de impacto en comunidades locales'),
        ('CrisisManager AI', 'Gesti√≥n de emergencias con response protocols'),
        ('DigitalWellness AI', 'Promoci√≥n de bienestar digital y digital detox'),
        ('EnvironmentalImpact AI', 'Assessment ambiental y biodiversity protection')
    ]
    
    for agent_name, description in track3_agents:
        p = doc.add_paragraph()
        p.add_run(f'{agent_name}: ').bold = True
        p.add_run(description)
    
    doc.add_page_break()
    
    # ===== APIs =====
    doc.add_heading('üîå APIs Y ENDPOINTS (200+)', 1)
    
    doc.add_paragraph(
        'La plataforma expone m√°s de 200 endpoints REST organizados en 11 categor√≠as '
        'principales con autenticaci√≥n JWT y rate limiting.'
    )
    
    api_categories = [
        ('Authentication & Authorization', '12 endpoints', 'register, login, logout, refresh, 2FA, OAuth'),
        ('Booking APIs', '12 endpoints', 'create, get, update, cancel, availability, check-in, tickets'),
        ('Tour/Package APIs', '15 endpoints', 'list, search, featured, trending, recommendations, reviews'),
        ('Payment APIs', '11 endpoints', 'intent, process, refund, methods, split payments, webhooks'),
        ('User/Profile APIs', '13 endpoints', 'profile, bookings, reviews, wishlist, points, badges, avatar'),
        ('CRM APIs', '20+ endpoints', 'contacts, pipeline, opportunities, tickets, notes, tags'),
        ('AI Agent APIs', '10 endpoints', 'chat, recommend, generate-itinerary, optimize-price, sentiment'),
        ('Communication APIs', '25+ endpoints', 'email, SMS, WhatsApp, push notifications, PBX calls'),
        ('Analytics & Reporting', '12 endpoints', 'overview, sales, revenue, conversions, reports, KPIs'),
        ('Admin APIs', '20+ endpoints', 'user management, system config, logs, monitoring, cache'),
        ('Integration APIs', '15+ endpoints', 'OTA sync, GDS flights, payment webhooks, social media')
    ]
    
    # Crear tabla de APIs
    api_table_data = [['Categor√≠a', 'Cantidad', 'Principales Endpoints']]
    api_table_data.extend(api_categories)
    
    api_table = doc.add_table(rows=len(api_table_data), cols=3)
    api_table.style = 'Light List Accent 1'
    
    for i, row_data in enumerate(api_table_data):
        row = api_table.rows[i]
        for j, cell_data in enumerate(row_data):
            row.cells[j].text = cell_data
            if i == 0:  # Header
                row.cells[j].paragraphs[0].runs[0].font.bold = True
    
    doc.add_page_break()
    
    # ===== MODELOS DE NEGOCIO =====
    doc.add_heading('üíº MODELOS DE NEGOCIO', 1)
    
    business_models = [
        ('B2C - Business to Consumer', {
            'Descripci√≥n': 'Clientes individuales que reservan directamente',
            'Comisi√≥n': '0% (precio p√∫blico)',
            'Pago': 'Inmediato',
            'M√©todos': 'Tarjeta, PayPal, transferencia',
            'Caracter√≠sticas': 'Registro gratuito, loyalty program, reviews, gamification'
        }),
        ('B2B - Tour Operators', {
            'Descripci√≥n': 'Mayoristas que gestionan m√∫ltiples agencias',
            'Comisi√≥n': '10% sobre precio base',
            'Pago': 'NET 30 (pago a 30 d√≠as)',
            'Facturaci√≥n': 'Mensual consolidada',
            'Caracter√≠sticas': 'API access, bulk booking, contratos personalizados, cr√©dito empresarial'
        }),
        ('B2B - Travel Agencies', {
            'Descripci√≥n': 'Agencias que venden bajo un tour operator',
            'Comisi√≥n': '8% sobre precio base',
            'Pago': 'NET 15 (pago a 15 d√≠as)',
            'Facturaci√≥n': 'Quincenal',
            'Caracter√≠sticas': 'Portal agencia, gesti√≥n de agentes, sistema de tickets'
        }),
        ('B2B2C - Marketplace', {
            'Descripci√≥n': 'M√∫ltiples proveedores venden a trav√©s de la plataforma',
            'Comisi√≥n': 'Variable por proveedor',
            'Caracter√≠sticas': 'Multiple suppliers, unified experience, quality control, dispute resolution'
        })
    ]
    
    for model_name, details in business_models:
        doc.add_heading(model_name, 2)
        for key, value in details.items():
            p = doc.add_paragraph()
            p.add_run(f'{key}: ').bold = True
            p.add_run(value)
        doc.add_paragraph()
    
    doc.add_page_break()
    
    # ===== INTEGRACIONES =====
    doc.add_heading('üîó INTEGRACIONES EXTERNAS (25+)', 1)
    
    integrations = [
        ('Payment Gateways (6+)', ['Stripe', 'PayPal', 'MercadoPago', 'Authorize.net', 'Braintree', 'Square']),
        ('GDS Systems (3)', ['Amadeus', 'Sabre', 'Travelport']),
        ('OTAs (5+)', ['Booking.com', 'Expedia', 'Airbnb Experiences', 'TripAdvisor', 'Viator']),
        ('Communication (4)', ['SendGrid (Email)', 'Twilio (SMS)', 'WhatsApp Business API', 'Firebase Cloud Messaging']),
        ('AI Services (4)', ['OpenAI GPT-4', 'Anthropic Claude 3', 'Google Gemini Pro', 'Pinecone Vector DB']),
        ('Maps & Location (3)', ['Google Maps API', 'Mapbox', 'OpenStreetMap']),
        ('Social Media (4+)', ['Facebook Graph API', 'Instagram API', 'Twitter API', 'LinkedIn API']),
        ('Cloud Services (3+)', ['AWS S3 Storage', 'Cloudflare CDN', 'Firebase'])
    ]
    
    for category, services in integrations:
        doc.add_heading(category, 2)
        for service in services:
            doc.add_paragraph(service, style='List Bullet')
    
    doc.add_page_break()
    
    # ===== CONCLUSI√ìN =====
    doc.add_heading('üéâ CONCLUSI√ìN', 1)
    
    conclusion_text = [
        'Spirit Tours es una plataforma empresarial completa de clase mundial que integra:',
        '',
        '‚úÖ 66+ m√≥dulos funcionales cubriendo todas las necesidades del negocio',
        '‚úÖ 28 agentes de IA especializados en 3 tracks principales',
        '‚úÖ 200+ endpoints API REST con autenticaci√≥n y rate limiting',
        '‚úÖ 3 modelos de negocio (B2C, B2B, B2B2C) completamente funcionales',
        '‚úÖ 25+ integraciones con servicios externos l√≠deres del mercado',
        '‚úÖ Tecnolog√≠as emergentes (AR, VR, Blockchain, IoT, Quantum Computing)',
        '‚úÖ Seguridad de nivel empresarial con m√∫ltiples capas de protecci√≥n',
        '‚úÖ Analytics avanzado y reporting en tiempo real',
        '‚úÖ Compromiso con sostenibilidad, √©tica y accesibilidad',
        '',
        'Estado: ‚úÖ 100% Operacional - Production Ready',
        '',
        'La plataforma est√° lista para escalar y soportar millones de usuarios con '
        'una arquitectura robusta, segura y de alto rendimiento.'
    ]
    
    for line in conclusion_text:
        if line:
            doc.add_paragraph(line)
        else:
            doc.add_paragraph()
    
    # ===== FOOTER =====
    doc.add_paragraph()
    doc.add_paragraph()
    footer = doc.add_paragraph()
    footer.alignment = WD_ALIGN_PARAGRAPH.CENTER
    footer.add_run('___________________________________\n\n')
    footer.add_run(f'Generado el: {datetime.datetime.now().strftime("%d de %B, %Y")}\n').italic = True
    footer.add_run('Versi√≥n del Documento: 1.0\n').italic = True
    footer.add_run('Spirit Tours Platform ¬© 2025\n').italic = True
    footer.add_run('Para: Equipo Ejecutivo y T√©cnico').italic = True
    
    # Guardar documento
    output_file = 'Spirit_Tours_Reporte_Completo_Sistema.docx'
    doc.save(output_file)
    print(f'‚úÖ Documento Word generado: {output_file}')
    return output_file


# ============================================================================
# FUNCI√ìN PARA GENERAR PDF
# ============================================================================

def generate_pdf_document():
    """Genera documento PDF del reporte completo"""
    
    print("üìÑ Generando documento PDF...")
    
    output_file = 'Spirit_Tours_Reporte_Completo_Sistema.pdf'
    doc = SimpleDocTemplate(output_file, pagesize=letter,
                           rightMargin=72, leftMargin=72,
                           topMargin=72, bottomMargin=18)
    
    # Estilos
    styles = getSampleStyleSheet()
    
    # Estilo personalizado para t√≠tulo
    title_style = ParagraphStyle(
        'CustomTitle',
        parent=styles['Heading1'],
        fontSize=24,
        textColor=colors.HexColor('#0066CC'),
        spaceAfter=30,
        alignment=TA_CENTER
    )
    
    # Estilo para subt√≠tulos
    subtitle_style = ParagraphStyle(
        'CustomSubtitle',
        parent=styles['Heading2'],
        fontSize=16,
        textColor=colors.HexColor('#0066CC'),
        spaceAfter=12
    )
    
    # Estilo para secciones
    section_style = ParagraphStyle(
        'CustomSection',
        parent=styles['Heading3'],
        fontSize=14,
        textColor=colors.HexColor('#333333'),
        spaceAfter=10
    )
    
    # Contenido
    story = []
    
    # ===== PORTADA =====
    story.append(Spacer(1, 2*inch))
    story.append(Paragraph('SPIRIT TOURS PLATFORM', title_style))
    story.append(Spacer(1, 0.5*inch))
    story.append(Paragraph('REPORTE COMPLETO DEL SISTEMA', subtitle_style))
    story.append(Spacer(1, 1*inch))
    
    info_text = f'''
    <para align="center">
    <b>Fecha de Generaci√≥n:</b> {datetime.datetime.now().strftime("%d de %B, %Y")}<br/>
    <b>Versi√≥n del Sistema:</b> 2.0.0<br/>
    <b>Estado:</b> ‚úÖ 100% Operacional - Production Ready<br/>
    <b>Arquitectura:</b> Microservicios Full-Stack con IA Multi-Modelo
    </para>
    '''
    story.append(Paragraph(info_text, styles['Normal']))
    story.append(PageBreak())
    
    # ===== RESUMEN EJECUTIVO =====
    story.append(Paragraph('üìä RESUMEN EJECUTIVO', title_style))
    story.append(Spacer(1, 12))
    
    summary = '''
    Spirit Tours es una plataforma integral de turismo religioso y espiritual de nivel 
    empresarial que combina tecnolog√≠a avanzada de IA, realidad aumentada, blockchain 
    y sistemas empresariales B2B/B2C/B2B2C.
    '''
    story.append(Paragraph(summary, styles['Normal']))
    story.append(Spacer(1, 12))
    
    # Tabla de estad√≠sticas
    story.append(Paragraph('Estad√≠sticas del Sistema', subtitle_style))
    
    stats_data = [
        ['M√©trica', 'Valor'],
        ['M√≥dulos Principales', '66+ m√≥dulos'],
        ['Agentes IA', '28 agentes especializados'],
        ['APIs/Endpoints', '200+ endpoints REST'],
        ['Modelos de Negocio', '3 (B2C, B2B, B2B2C)'],
        ['Integraciones', '25+ servicios externos'],
        ['Idiomas Soportados', '15+ idiomas']
    ]
    
    stats_table = Table(stats_data, colWidths=[3*inch, 3*inch])
    stats_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#0066CC')),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, 0), 12),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
        ('BACKGROUND', (0, 1), (-1, -1), colors.beige),
        ('GRID', (0, 0), (-1, -1), 1, colors.black)
    ]))
    story.append(stats_table)
    story.append(PageBreak())
    
    # ===== M√ìDULOS =====
    story.append(Paragraph('üì¶ M√ìDULOS DEL SISTEMA (66+)', title_style))
    story.append(Spacer(1, 12))
    
    modules_intro = '''
    El sistema Spirit Tours est√° compuesto por m√°s de 66 m√≥dulos funcionales 
    organizados en diferentes categor√≠as:
    '''
    story.append(Paragraph(modules_intro, styles['Normal']))
    story.append(Spacer(1, 12))
    
    module_categories = [
        'Core Business: 12 m√≥dulos',
        'AI & ML: 20 m√≥dulos',
        'Analytics & Reporting: 5 m√≥dulos',
        'Security: 6 m√≥dulos',
        'Advanced Features: 12 m√≥dulos',
        'Infrastructure: 11 m√≥dulos'
    ]
    
    for cat in module_categories:
        story.append(Paragraph(f'‚Ä¢ {cat}', styles['Normal']))
    
    story.append(PageBreak())
    
    # ===== AGENTES IA =====
    story.append(Paragraph('ü§ñ AGENTES DE INTELIGENCIA ARTIFICIAL (28)', title_style))
    story.append(Spacer(1, 12))
    
    ai_intro = '''
    Spirit Tours cuenta con 28 agentes de IA especializados organizados en 3 tracks:
    '''
    story.append(Paragraph(ai_intro, styles['Normal']))
    story.append(Spacer(1, 12))
    
    story.append(Paragraph('üéØ TRACK 1: Customer & Revenue Excellence (9 agentes)', subtitle_style))
    story.append(Paragraph('üõ°Ô∏è TRACK 2: Security & Market Intelligence (10 agentes)', subtitle_style))
    story.append(Paragraph('üå± TRACK 3: Ethics & Sustainability (9 agentes)', subtitle_style))
    
    story.append(PageBreak())
    
    # ===== CONCLUSI√ìN =====
    story.append(Paragraph('üéâ CONCLUSI√ìN', title_style))
    story.append(Spacer(1, 12))
    
    conclusion = '''
    Spirit Tours es una plataforma empresarial completa de clase mundial que est√° 
    100% operacional y lista para producci√≥n. La plataforma integra 66+ m√≥dulos 
    funcionales, 28 agentes de IA especializados, 200+ APIs REST, y 25+ integraciones 
    con servicios externos l√≠deres del mercado.
    '''
    story.append(Paragraph(conclusion, styles['Normal']))
    story.append(Spacer(1, 24))
    
    footer_text = f'''
    <para align="center">
    ___________________________________<br/><br/>
    <i>Generado el: {datetime.datetime.now().strftime("%d de %B, %Y")}</i><br/>
    <i>Versi√≥n del Documento: 1.0</i><br/>
    <i>Spirit Tours Platform ¬© 2025</i>
    </para>
    '''
    story.append(Paragraph(footer_text, styles['Normal']))
    
    # Construir PDF
    doc.build(story)
    print(f'‚úÖ Documento PDF generado: {output_file}')
    return output_file


# ============================================================================
# MAIN
# ============================================================================

if __name__ == '__main__':
    print("=" * 60)
    print("üöÄ Spirit Tours - Generador de Documentaci√≥n")
    print("=" * 60)
    print()
    
    try:
        # Generar Word
        word_file = generate_word_document()
        print()
        
        # Generar PDF
        pdf_file = generate_pdf_document()
        print()
        
        print("=" * 60)
        print("‚úÖ DOCUMENTACI√ìN GENERADA EXITOSAMENTE")
        print("=" * 60)
        print()
        print(f"üìÑ Archivo Word: {word_file}")
        print(f"üìÑ Archivo PDF:  {pdf_file}")
        print()
        print("üìÇ Los archivos est√°n listos para descargar en:")
        print(f"   /home/user/webapp/{word_file}")
        print(f"   /home/user/webapp/{pdf_file}")
        print()
        
    except Exception as e:
        print(f"‚ùå Error generando documentaci√≥n: {str(e)}")
        import traceback
        traceback.print_exc()
