#!/bin/bash

###############################################################################
# Spirit Tours - SSL/TLS Setup Script
# Version: 1.0.0
# Descripci√≥n: Configuraci√≥n autom√°tica de SSL con Let's Encrypt
###############################################################################

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚Ñπ ${NC}$@"
}

log_success() {
    echo -e "${GREEN}‚úì${NC} $@"
}

log_warning() {
    echo -e "${YELLOW}‚ö†${NC} $@"
}

log_error() {
    echo -e "${RED}‚úó${NC} $@"
}

print_header() {
    echo ""
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo "  $1"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo ""
}

check_root() {
    if [ "$EUID" -ne 0 ]; then 
        log_error "Este script debe ejecutarse como root o con sudo"
        exit 1
    fi
}

install_certbot() {
    print_header "Instalando Certbot"
    
    if command -v certbot &> /dev/null; then
        log_success "Certbot ya est√° instalado"
        certbot --version
        return 0
    fi
    
    log_info "Instalando Certbot y el plugin de Nginx..."
    
    # Ubuntu/Debian
    if command -v apt-get &> /dev/null; then
        apt-get update
        apt-get install -y certbot python3-certbot-nginx
    # CentOS/RHEL
    elif command -v dnf &> /dev/null; then
        dnf install -y certbot python3-certbot-nginx
    else
        log_error "Sistema operativo no soportado"
        exit 1
    fi
    
    log_success "Certbot instalado exitosamente"
}

configure_domains() {
    print_header "Configuraci√≥n de Dominios"
    
    echo "Ingrese los dominios para los que desea obtener certificados SSL:"
    echo "Puede ingresar m√∫ltiples dominios separados por espacios"
    echo ""
    echo "Ejemplo: app.spirittours.com api.spirittours.com"
    echo ""
    read -p "Dominios: " DOMAINS
    
    if [ -z "$DOMAINS" ]; then
        log_error "Debe ingresar al menos un dominio"
        exit 1
    fi
    
    log_info "Dominios configurados: $DOMAINS"
    
    # Validate domains
    for domain in $DOMAINS; do
        log_info "Verificando dominio: $domain"
        
        # Check DNS resolution
        if host "$domain" > /dev/null 2>&1; then
            log_success "$domain resuelve correctamente"
        else
            log_warning "$domain no resuelve. Aseg√∫rese de que el DNS est√© configurado correctamente"
        fi
    done
    
    echo ""
    read -p "Ingrese su email para notificaciones de Let's Encrypt: " EMAIL
    
    if [ -z "$EMAIL" ]; then
        log_error "Debe ingresar un email v√°lido"
        exit 1
    fi
    
    log_success "Email configurado: $EMAIL"
}

obtain_certificates() {
    print_header "Obteniendo Certificados SSL"
    
    # Convert domains to certbot format
    local domain_args=""
    for domain in $DOMAINS; do
        domain_args="$domain_args -d $domain"
    done
    
    log_info "Obteniendo certificados para: $DOMAINS"
    log_info "Esto puede tomar unos minutos..."
    
    # Run certbot
    certbot --nginx \
        $domain_args \
        --email "$EMAIL" \
        --agree-tos \
        --no-eff-email \
        --redirect \
        --hsts \
        --staple-ocsp
    
    if [ $? -eq 0 ]; then
        log_success "Certificados SSL obtenidos exitosamente"
    else
        log_error "Error al obtener certificados SSL"
        log_error "Verifique que:"
        log_error "  1. Los dominios apuntan a este servidor"
        log_error "  2. Nginx est√° corriendo"
        log_error "  3. Los puertos 80 y 443 est√°n abiertos"
        exit 1
    fi
}

setup_auto_renewal() {
    print_header "Configurando Renovaci√≥n Autom√°tica"
    
    log_info "Configurando cron job para renovaci√≥n autom√°tica..."
    
    # Test renewal
    log_info "Probando renovaci√≥n (dry-run)..."
    certbot renew --dry-run
    
    if [ $? -eq 0 ]; then
        log_success "Test de renovaci√≥n exitoso"
    else
        log_warning "Test de renovaci√≥n fall√≥, pero los certificados est√°n instalados"
    fi
    
    # Certbot automatically sets up renewal via systemd timer or cron
    log_success "Renovaci√≥n autom√°tica configurada"
    log_info "Los certificados se renovar√°n autom√°ticamente cada 60 d√≠as"
}

configure_security_headers() {
    print_header "Configurando Security Headers"
    
    local nginx_ssl_conf="/etc/nginx/snippets/ssl-params.conf"
    
    log_info "Creando configuraci√≥n de seguridad SSL..."
    
    cat > "$nginx_ssl_conf" << 'EOF'
# SSL Security Parameters
# Generated by Spirit Tours SSL Setup Script

# SSL Protocol Configuration
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

# SSL Session Configuration
ssl_session_cache shared:SSL:50m;
ssl_session_timeout 1d;
ssl_session_tickets off;

# OCSP Stapling
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# Security Headers
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "no-referrer-when-downgrade" always;

# Additional Security
add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

# Disable server tokens
server_tokens off;
EOF
    
    log_success "Configuraci√≥n de seguridad creada: $nginx_ssl_conf"
    
    log_info "Actualizando configuraci√≥n de Nginx..."
    
    # Add include to nginx.conf if not already present
    if ! grep -q "ssl-params.conf" /etc/nginx/nginx.conf; then
        sed -i '/http {/a \    include /etc/nginx/snippets/ssl-params.conf;' /etc/nginx/nginx.conf
        log_success "Configuraci√≥n incluida en nginx.conf"
    else
        log_info "Configuraci√≥n ya est√° incluida en nginx.conf"
    fi
}

test_ssl_configuration() {
    print_header "Verificando Configuraci√≥n SSL"
    
    log_info "Probando configuraci√≥n de Nginx..."
    nginx -t
    
    if [ $? -eq 0 ]; then
        log_success "Configuraci√≥n de Nginx es v√°lida"
        
        log_info "Recargando Nginx..."
        systemctl reload nginx
        log_success "Nginx recargado"
    else
        log_error "Error en la configuraci√≥n de Nginx"
        exit 1
    fi
    
    # Test SSL certificates
    for domain in $DOMAINS; do
        log_info "Verificando certificado para $domain..."
        
        if timeout 5 openssl s_client -connect "$domain:443" -servername "$domain" </dev/null 2>/dev/null | grep -q "Verify return code: 0"; then
            log_success "Certificado SSL v√°lido para $domain"
        else
            log_warning "No se pudo verificar el certificado para $domain"
            log_warning "Esto puede deberse a propagaci√≥n de DNS o firewall"
        fi
    done
}

display_summary() {
    print_header "Resumen de Configuraci√≥n SSL"
    
    echo ""
    echo "‚úÖ Certificados SSL instalados exitosamente"
    echo ""
    echo "üîí Dominios configurados:"
    for domain in $DOMAINS; do
        echo "   ‚Ä¢ https://$domain"
    done
    echo ""
    echo "üìß Email de contacto: $EMAIL"
    echo ""
    echo "üîÑ Renovaci√≥n autom√°tica:"
    echo "   ‚Ä¢ Configurada mediante systemd timer/cron"
    echo "   ‚Ä¢ Se ejecuta autom√°ticamente cada 60 d√≠as"
    echo "   ‚Ä¢ Verificar: certbot renew --dry-run"
    echo ""
    echo "üìÅ Ubicaci√≥n de certificados:"
    for domain in $DOMAINS; do
        echo "   ‚Ä¢ /etc/letsencrypt/live/$domain/"
    done
    echo ""
    echo "üîç Verificar configuraci√≥n SSL:"
    for domain in $DOMAINS; do
        echo "   ‚Ä¢ https://www.ssllabs.com/ssltest/analyze.html?d=$domain"
    done
    echo ""
    echo "‚ö†Ô∏è  Importante:"
    echo "   ‚Ä¢ Los certificados expiran cada 90 d√≠as"
    echo "   ‚Ä¢ La renovaci√≥n es autom√°tica"
    echo "   ‚Ä¢ Recibir√° emails antes de la expiraci√≥n"
    echo ""
    
    log_success "Configuraci√≥n SSL completada"
}

main() {
    cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                      ‚ïë
‚ïë            üîí  SPIRIT TOURS - SSL/TLS SETUP  üîí                     ‚ïë
‚ïë                                                                      ‚ïë
‚ïë                    Let's Encrypt Configuration                       ‚ïë
‚ïë                                                                      ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF

    check_root
    install_certbot
    configure_domains
    obtain_certificates
    setup_auto_renewal
    configure_security_headers
    test_ssl_configuration
    display_summary
    
    echo ""
    log_success "üéâ Setup de SSL completado exitosamente! üéâ"
    echo ""
}

# Trap errors
trap 'log_error "Error en l√≠nea $LINENO. Setup fallido."; exit 1' ERR

main "$@"
