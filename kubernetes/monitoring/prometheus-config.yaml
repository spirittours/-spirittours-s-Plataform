apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: spirit-tours
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'spirit-tours-prod'
        environment: 'production'
    
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    
    rule_files:
      - '/etc/prometheus/rules/*.yml'
    
    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
      
      - job_name: 'backend-api'
        static_configs:
        - targets: ['backend-api:9090']
        metrics_path: '/metrics'
      
      - job_name: 'postgres-exporter'
        static_configs:
        - targets: ['postgres-exporter:9187']
      
      - job_name: 'redis-exporter'
        static_configs:
        - targets: ['redis-exporter:9121']
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: spirit-tours
data:
  alerts.yml: |
    groups:
    - name: spirit-tours-alerts
      interval: 30s
      rules:
      - alert: HighMemoryUsage
        expr: (sum(container_memory_working_set_bytes{namespace="spirit-tours"}) by (pod) / sum(container_spec_memory_limit_bytes{namespace="spirit-tours"}) by (pod)) > 0.9
        for: 5m
        labels:
          severity: warning
          component: memory
        annotations:
          summary: "High memory usage detected"
          description: "Pod {{ $labels.pod }} memory usage is above 90%"
      
      - alert: HighCPUUsage
        expr: (sum(rate(container_cpu_usage_seconds_total{namespace="spirit-tours"}[5m])) by (pod) / sum(container_spec_cpu_quota{namespace="spirit-tours"}/container_spec_cpu_period{namespace="spirit-tours"}) by (pod)) > 0.9
        for: 5m
        labels:
          severity: warning
          component: cpu
        annotations:
          summary: "High CPU usage detected"
          description: "Pod {{ $labels.pod }} CPU usage is above 90%"
      
      - alert: PodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total{namespace="spirit-tours"}[15m]) > 0
        for: 5m
        labels:
          severity: critical
          component: pod
        annotations:
          summary: "Pod is crash looping"
          description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last 15 minutes"
      
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{namespace="spirit-tours"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          component: api
        annotations:
          summary: "High API response time"
          description: "95th percentile response time is {{ $value }} seconds"
      
      - alert: DatabaseConnectionPoolExhausted
        expr: pg_stat_database_numbackends{datname="spirittours"} / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: critical
          component: database
        annotations:
          summary: "Database connection pool almost exhausted"
          description: "Database connection pool is {{ $value | humanizePercentage }} full"
      
      - alert: RedisMemoryHigh
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          component: redis
        annotations:
          summary: "Redis memory usage high"
          description: "Redis memory is {{ $value | humanizePercentage }} full"