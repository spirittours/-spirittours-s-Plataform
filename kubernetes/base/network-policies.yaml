# Network Policies for Spirit Tours Platform Security
# Implements Zero Trust Network Architecture

---
# Default Deny All Traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress

---
# Allow DNS Resolution for All Pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: default
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

---
# Frontend Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: spirit-tours-frontend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow traffic from Ingress Controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
    
    # Allow traffic from Load Balancer
    - from:
        - podSelector:
            matchLabels:
              app: nginx-lb
      ports:
        - protocol: TCP
          port: 80
  
  egress:
    # Allow connection to Backend API
    - to:
        - podSelector:
            matchLabels:
              app: spirit-tours-backend
      ports:
        - protocol: TCP
          port: 8000
    
    # Allow connection to CDN
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
    
    # Allow DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# Backend API Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: spirit-tours-backend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # From Frontend
    - from:
        - podSelector:
            matchLabels:
              app: spirit-tours-frontend
      ports:
        - protocol: TCP
          port: 8000
    
    # From Mobile App Backend
    - from:
        - podSelector:
            matchLabels:
              app: spirit-tours-mobile-backend
      ports:
        - protocol: TCP
          port: 8000
    
    # From Admin Dashboard
    - from:
        - podSelector:
            matchLabels:
              app: spirit-tours-admin
      ports:
        - protocol: TCP
          port: 8000
    
    # From Ingress for API access
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8000
    
    # Health checks from monitoring
    - from:
        - podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 9090
  
  egress:
    # To PostgreSQL Database
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432
    
    # To Redis Cache
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    
    # To AI Agents
    - to:
        - podSelector:
            matchLabels:
              tier: ai-agent
      ports:
        - protocol: TCP
          port: 50051
        - protocol: TCP
          port: 50052
        - protocol: TCP
          port: 50053
        - protocol: TCP
          port: 50061
        - protocol: TCP
          port: 50062
        - protocol: TCP
          port: 50071
        - protocol: TCP
          port: 50072
        - protocol: TCP
          port: 50073
    
    # To External APIs (Payment, Maps, etc)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
    
    # DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# PostgreSQL Database Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Only from Backend and AI Agents
    - from:
        - podSelector:
            matchLabels:
              app: spirit-tours-backend
        - podSelector:
            matchLabels:
              tier: ai-agent
      ports:
        - protocol: TCP
          port: 5432
    
    # From backup jobs
    - from:
        - podSelector:
            matchLabels:
              job: postgres-backup
      ports:
        - protocol: TCP
          port: 5432
  
  egress:
    # To backup storage
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
    
    # DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# Redis Cache Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Only from Backend and AI Agents
    - from:
        - podSelector:
            matchLabels:
              app: spirit-tours-backend
        - podSelector:
            matchLabels:
              tier: ai-agent
      ports:
        - protocol: TCP
          port: 6379
    
    # Sentinel for HA
    - from:
        - podSelector:
            matchLabels:
              app: redis-sentinel
      ports:
        - protocol: TCP
          port: 26379
  
  egress:
    # Replication to other Redis nodes
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    
    # DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# AI Agents Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-agents-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      tier: ai-agent
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # From Backend API
    - from:
        - podSelector:
            matchLabels:
              app: spirit-tours-backend
      ports:
        - protocol: TCP
          port: 50051
        - protocol: TCP
          port: 50052
        - protocol: TCP
          port: 50053
        - protocol: TCP
          port: 50061
        - protocol: TCP
          port: 50062
        - protocol: TCP
          port: 50071
        - protocol: TCP
          port: 50072
        - protocol: TCP
          port: 50073
    
    # From other AI Agents (inter-agent communication)
    - from:
        - podSelector:
            matchLabels:
              tier: ai-agent
      ports:
        - protocol: TCP
          port: 50051
        - protocol: TCP
          port: 50052
        - protocol: TCP
          port: 50053
        - protocol: TCP
          port: 50061
        - protocol: TCP
          port: 50062
        - protocol: TCP
          port: 50071
        - protocol: TCP
          port: 50072
        - protocol: TCP
          port: 50073
  
  egress:
    # To Database
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432
    
    # To Redis
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
    
    # To other AI Agents
    - to:
        - podSelector:
            matchLabels:
              tier: ai-agent
      ports:
        - protocol: TCP
          port: 50051
        - protocol: TCP
          port: 50052
        - protocol: TCP
          port: 50053
        - protocol: TCP
          port: 50061
        - protocol: TCP
          port: 50062
        - protocol: TCP
          port: 50071
        - protocol: TCP
          port: 50072
        - protocol: TCP
          port: 50073
    
    # To ML Model Registry
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
    
    # DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# Monitoring Stack Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # From Grafana
    - from:
        - podSelector:
            matchLabels:
              app: grafana
      ports:
        - protocol: TCP
          port: 9090
    
    # From Alert Manager
    - from:
        - podSelector:
            matchLabels:
              app: alertmanager
      ports:
        - protocol: TCP
          port: 9090
  
  egress:
    # Scrape all services
    - to:
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 8000
    
    # DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53

---
# Admin Dashboard Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: admin-dashboard-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: spirit-tours-admin
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # From Ingress
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000
    
    # Only from admin IP ranges
    - from:
        - ipBlock:
            cidr: 10.0.1.0/24  # Admin VPN subnet
      ports:
        - protocol: TCP
          port: 3000
  
  egress:
    # To Backend API
    - to:
        - podSelector:
            matchLabels:
              app: spirit-tours-backend
      ports:
        - protocol: TCP
          port: 8000
    
    # To Monitoring
    - to:
        - podSelector:
            matchLabels:
              app: grafana
      ports:
        - protocol: TCP
          port: 3000
    
    # DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53