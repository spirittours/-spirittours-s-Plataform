apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apiGateway.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.apiGateway.name }}
    component: api-gateway
    version: {{ .Chart.AppVersion }}
    {{- include "spirit-tours.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  replicas: {{ .Values.apiGateway.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.apiGateway.name }}
      component: api-gateway
  template:
    metadata:
      labels:
        app: {{ .Values.apiGateway.name }}
        component: api-gateway
        version: {{ .Chart.AppVersion }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-api-gateway.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      serviceAccountName: {{ include "spirit-tours.serviceAccountName" . }}
      
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-postgresql 5432; do echo waiting for postgres; sleep 2; done']
        
        - name: wait-for-redis
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-redis-master 6379; do echo waiting for redis; sleep 2; done']
      
      containers:
        - name: {{ .Values.apiGateway.name }}
          image: "{{ .Values.global.imageRegistry }}{{ .Values.apiGateway.image.repository }}:{{ .Values.apiGateway.image.tag }}"
          imagePullPolicy: {{ .Values.apiGateway.image.pullPolicy }}
          
          ports:
            - name: http
              containerPort: {{ .Values.apiGateway.service.targetPort }}
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment }}
            - name: PORT
              value: "{{ .Values.apiGateway.service.targetPort }}"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-database-secret
                  key: url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis-secret
                  key: url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-jwt-secret
                  key: secret
            {{- range .Values.apiGateway.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          
          envFrom:
            - configMapRef:
                name: {{ .Values.apiGateway.name }}-config
            - secretRef:
                name: {{ .Values.apiGateway.name }}-secret
                optional: true
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
          
          resources:
            {{- toYaml .Values.apiGateway.resources | nindent 12 }}
          
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: logs
              mountPath: /app/logs
            - name: tmp
              mountPath: /tmp
          
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
      
      volumes:
        - name: config
          configMap:
            name: {{ .Values.apiGateway.name }}-config
        - name: logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      
      {{- with .Values.apiGateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.apiGateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.apiGateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: {{ .Values.apiGateway.name }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.apiGateway.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.apiGateway.name }}
    component: api-gateway
    {{- include "spirit-tours.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: {{ .Values.apiGateway.service.type }}
  ports:
    - port: {{ .Values.apiGateway.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app: {{ .Values.apiGateway.name }}
    component: api-gateway

{{- if .Values.apiGateway.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Values.apiGateway.name }}-hpa
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.apiGateway.name }}
    component: api-gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.apiGateway.name }}
  minReplicas: {{ .Values.apiGateway.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.apiGateway.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.apiGateway.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.apiGateway.autoscaling.targetMemoryUtilizationPercentage }}
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 4
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
{{- end }}

{{- if .Values.apiGateway.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.apiGateway.name }}-ingress
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.apiGateway.name }}
    component: api-gateway
  annotations:
    {{- toYaml .Values.apiGateway.ingress.annotations | nindent 4 }}
spec:
  ingressClassName: {{ .Values.apiGateway.ingress.className }}
  {{- if .Values.apiGateway.ingress.tls }}
  tls:
    {{- range .Values.apiGateway.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.apiGateway.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Values.apiGateway.name }}
                port:
                  number: {{ $.Values.apiGateway.service.port }}
          {{- end }}
    {{- end }}
{{- end }}